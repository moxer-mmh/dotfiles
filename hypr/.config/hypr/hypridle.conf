# =============================================================================
# 🚀 SPACE STATION HYPRIDLE CONFIG 🚀
# Intelligent power management and idle behavior for cosmic workstation
# =============================================================================
# 
# This configuration provides automated power management with:
# - Progressive idle timeouts (dim → lock → display off → suspend)
# - Battery-aware suspend behavior (suspend on battery, display off on AC)
# - Seamless integration with Hyprlock screen locker
# - Brightness restoration and display wake functionality
# - Optimized for development workflow interruption minimization
#
# Author: moxer_mmh
# Last Updated: June 2025
# Compatible with: Hypridle 0.1+
# =============================================================================

# -----------------------------------------------------------------------------
# GENERAL IDLE MANAGEMENT CONFIGURATION
# Core behavior and integration settings
# -----------------------------------------------------------------------------
general {
    # Screen lock integration - prevents multiple instances
    lock_cmd = pidof hyprlock || hyprlock       # Only start hyprlock if not already running
    
    # System sleep preparation and recovery
    before_sleep_cmd = loginctl lock-session    # Secure: lock before system suspends
    after_sleep_cmd = hyprctl dispatch dpms on  # Ensure display wakes properly after sleep
}

# -----------------------------------------------------------------------------
# IDLE TIMEOUT LISTENERS
# Progressive power management stages with increasing idle duration
# -----------------------------------------------------------------------------

# STAGE 1: SCREEN DIMMING (5 minutes)
# Gentle warning that system will soon lock - preserves work visibility
listener {
    timeout = 300                               # 5 minutes (300 seconds) of inactivity
    on-timeout = brightnessctl -s set 10%       # Dim screen to 10% brightness (saves original)
    on-resume = brightnessctl -r                # Restore original brightness on activity
}

# STAGE 2: SCREEN LOCK (10 minutes)
# Security measure - activates cosmic lock screen with authentication requirement
listener {
    timeout = 600                               # 10 minutes (600 seconds) of inactivity
    on-timeout = loginctl lock-session          # Trigger session lock (activates hyprlock)
    # Note: No on-resume needed - lock screen handles its own unlock process
}

# STAGE 3: DISPLAY POWER OFF (15 minutes)  
# Energy conservation - turns off displays while keeping system active
listener {
    timeout = 900                               # 15 minutes (900 seconds) of inactivity
    on-timeout = hyprctl dispatch dpms off      # Turn off all connected displays
    on-resume = hyprctl dispatch dpms on        # Turn displays back on when activity detected
}

# STAGE 4: INTELLIGENT SYSTEM SUSPEND (30 minutes)
# Battery-aware final stage - suspend on battery power, display off on AC power
listener {
    timeout = 1800                              # 30 minutes (1800 seconds) of inactivity
    # Smart power management command:
    # - Check if any AC adapter is online (connected to power)
    # - If AC adapter offline (battery only): suspend system for maximum power saving
    # - If AC adapter online (plugged in): only turn off displays, keep system running
    on-timeout = if [ "$(cat /sys/class/power_supply/A*/online 2>/dev/null || echo 1)" = "0" ]; then systemctl suspend; else hyprctl dispatch dpms off; fi
    # Command breakdown:
    # 1. cat /sys/class/power_supply/A*/online - reads AC adapter status
    # 2. 2>/dev/null - suppress error messages if path doesn't exist  
    # 3. || echo 1 - fallback to "1" (AC online) if no AC adapter found
    # 4. = "0" - check if AC adapter is offline (0 = offline, 1 = online)
    # 5. systemctl suspend - suspend entire system (battery mode)
    # 6. hyprctl dispatch dpms off - only turn off displays (AC mode)
}

# =============================================================================
# 📋 POWER MANAGEMENT TIMELINE SUMMARY
# =============================================================================
#
# IDLE PROGRESSION (All timeouts are cumulative from last activity):
#
# 🟢 0-5 min:     Normal operation (full brightness)
# 🟡 5-10 min:    Screen dimmed to 10% (warning phase)
# 🔒 10-15 min:   Screen locked with cosmic authentication
# ⚫ 15-30 min:   Displays powered off (system still active)
# 🔋 30+ min:     Smart suspend:
#                 • Battery: Full system suspend
#                 • AC Power: Display off only
#
# =============================================================================
# 🎯 CONFIGURATION BENEFITS
# =============================================================================
#
# 🔒 SECURITY FEATURES:
#   • Automatic screen lock after 10 minutes
#   • Session lock before system suspend
#   • No bypassing of authentication
#
# ⚡ POWER EFFICIENCY:
#   • Progressive power reduction (brightness → display → suspend)
#   • Battery-aware suspend behavior
#   • AC power mode preserves running processes
#
# 💼 DEVELOPER WORKFLOW:
#   • Long compile times won't trigger suspend on AC power
#   • Visual warning (dimming) before lock activation
#   • Seamless resume with brightness restoration
#
# 🖥️ MULTI-MONITOR SUPPORT:
#   • All connected displays managed uniformly
#   • Proper wake/sleep coordination
#   • No display configuration issues on resume
#
# =============================================================================
# 🛠️ CUSTOMIZATION NOTES
# =============================================================================
#
# To modify timeouts, change the 'timeout' values:
#   • 300 = 5 minutes (dimming)
#   • 600 = 10 minutes (lock)
#   • 900 = 15 minutes (display off)
#   • 1800 = 30 minutes (suspend/display off)
#
# To disable battery-aware suspend:
#   Replace the complex on-timeout with: systemctl suspend
#
# To disable suspend entirely:
#   Comment out or remove the final listener block
#
# =============================================================================
